!    -*- f90 -*-
! Note: the context of this file is case sensitive.

python module lmder__user__routines 
    interface lmder_user_interface 
        subroutine func(m,n,x,fvec,fjac,ldfjac,iflag) ! in :LEVMpyFortran:lmder:unknown_interface
            integer :: m
            integer, optional,check(shape(fjac,1)==n),depend(fjac) :: n=shape(fjac,1)
            double precision dimension(*) :: x
            double precision dimension(*) :: fvec
            double precision dimension(ldfjac,n) :: fjac
            integer, optional,check(shape(fjac,0)==ldfjac),depend(fjac) :: ldfjac=shape(fjac,0)
            integer :: iflag
        end subroutine func
    end interface lmder_user_interface
end python module lmder__user__routines
python module midpnt__user__routines 
    interface midpnt_user_interface 
        function func(xx) result (s) ! in :LEVMpyFortran:midpnt:unknown_interface
            real*8 :: xx
            real*8 :: s
        end function func
    end interface midpnt_user_interface
end python module midpnt__user__routines
python module trapzd__user__routines 
    interface trapzd_user_interface 
        function func(x) result (sum) ! in :LEVMpyFortran:trapzd:unknown_interface
            real*8 :: x
            real*8 :: sum
        end function func
    end interface trapzd_user_interface
end python module trapzd__user__routines
python module LEVMpyFortran ! in 
    interface  ! in :LEVMpyFortran
        real*8 :: p8
        real*8 :: p18
        real*8 :: gam
        real*8 :: sn1
        real*8 :: cs1
        real*8 :: pii
        real*8 :: cdn
        real*8 :: qpi
        integer :: mdex
        real*8 dimension(50) :: rxsd
        integer :: icount
        real*8 :: omegat
        real*8 :: psi
        real*8 :: gama
        real*8 :: deli
        real*8 :: tomegax
        real*8 :: phix
        integer :: ichg
        integer :: iwtx
        character*1 :: dattyc
        real*8 :: tomega
        real*8 :: phicom
        integer :: iv
        real*8 :: fnorm
        real*8 :: celcap
        character*1 :: fun
        character*1 :: dfit
        character*1 :: pfit
        real*8 dimension(4002) :: y
        real*8 dimension(4002) :: r
        real*8 dimension(4002) :: fj
        real*8 dimension(50) :: p
        real*8 :: drss
        real*8 :: roe
        real*8 :: rke
        integer dimension(50) :: ns
        integer dimension(50) :: nfree
        integer :: n
        integer :: icnt
        integer :: mn
        integer :: irch
        integer :: ixi
        character*1 :: dattyq
        real*8 dimension(2001) :: freq
        integer :: m
        character*1 :: dattyp
        real*8 :: rx
        real*8 :: tx
        real*8 :: ux
        real*8 :: phi
        real*8 :: xxm1
        real*8 :: xx1
        real*8 :: xx2
        real*8 :: xx3
        real*8 :: rn
        real*8 :: ain
        integer :: icav
        integer :: nelem
        integer :: nch
        real*8 :: clcap
        real*8 :: atemp
        real*8 :: wf
        integer :: maxfev
        integer :: icf
        integer :: mde
        integer :: jcdx
        integer :: mqy
        integer :: ispr
        integer :: icx
        integer :: ndf
        real*8 :: fqq
        real*8 :: epsg
        integer :: izr
        integer :: iop
        integer :: iorig
        integer :: nyc
        integer :: jy
        integer :: iprint
        integer :: ldfjac
        integer :: mode
        integer :: ifp
        integer :: ire
        integer :: istp
        integer :: jfp
        integer :: nph
        integer :: ine
        real*8 :: p39
        real*8 dimension(4002,50) :: fjacc
        real*8 dimension(4002) :: ytt
        real*8 :: sdwc
        real*8 :: sdrc
        real*8 dimension(50) :: diag
        integer :: ipar
        integer :: iopr
        integer :: jit
        integer :: ipf
        integer :: nprint
        integer :: mda
        integer :: iwt
        integer :: ixw
        integer :: infp
        integer :: ipl
        real*8 dimension(4002) :: shw
        integer :: isw
        real*8 :: px1
        real*8 :: px41
        real*8 :: px45
        common /cm39/ p8,p18
        common /cm29/ gam,sn1,cs1,pii,cdn,qpi,mdex
        common /cm20/ rxsd
        common /cm47/ icount
        common /cm80/ omegat,psi,gama,deli
        common /cm9/ tomegax,phix,ichg,iwtx
        common /cm78/ dattyc
        common /cm5/ tomega,phicom,iv
        common /cm4/ fnorm
        common /cm3/ celcap,fun,dfit,pfit
        common /cm2/ y,r,fj,p,drss,roe,rke,ns,nfree,n,icnt,mn,irch,ixi,dattyq
        common /cm1/ freq,m,dattyp
        common /cm13/ rx,tx,ux,phi,xxm1,xx1,xx2,xx3,rn,ain,icav,nelem,nch
        common /cm12/ clcap,atemp,wf,maxfev,icf,mde,jcdx
        common /cm11/ mqy,ispr,icx,ndf,fqq
        common /cm10/ epsg,izr
        common /cm16/ iop,iorig,nyc,jy,iprint,ldfjac,mode,ifp,ire,istp,jfp,nph,ine
        common /cm73/ p39
        common /cm14/ fjacc
        common /cm79/ ytt
        common /cm18/ sdwc,sdrc,diag,ipar,iopr
        common /cm35/ jit,ipf,nprint
        common /cm34/ mda,iwt,ixw,infp,ipl
        common /cm36/ shw,isw
        common /cm55/ px1,px41,px45
        function aifu(yy) ! in :LEVMpyFortran:AIFU.f
            real*8 :: yy
            real*8 :: celcap
            real*8 :: atemp
            real*8 :: wf
            integer :: maxfev
            integer :: icf
            integer :: mde
            integer :: jcdx
            real*8 :: tomega
            real*8 :: phicom
            integer :: iv
            double precision :: aifu
            common /cm12/ celcap,atemp,wf,maxfev,icf,mde,jcdx
            common /cm5/ tomega,phicom,iv
        end function aifu
        subroutine airyai(x,eps,ai) ! in :LEVMpyFortran:AIRYAI.f
            double precision :: x
            double precision :: eps
            double precision :: ai
        end subroutine airyai
        subroutine asub(m,freq,p,f) ! in :LEVMpyFortran:ASUB.f
            integer :: m
            double precision dimension(4002) :: freq
            double precision dimension(50) :: p
            double precision dimension(4002) :: f
            integer :: icnt
            common /cm47/ icnt
        end subroutine asub
        subroutine bsub(m,freq,p,f) ! in :LEVMpyFortran:BSUB.f
            integer :: m
            double precision dimension(4002) :: freq
            double precision dimension(50) :: p
            double precision dimension(4002) :: f
            integer :: icnt
            common /cm47/ icnt
        end subroutine bsub
        function cdcoth(x) ! in :LEVMpyFortran:CDCOTH.f
            complex*16 :: x
            complex*16 :: cdcoth
        end function cdcoth
        function cdfg(yy) ! in :LEVMpyFortran:CDFG.f
            real*8 :: yy
            real*8 :: tomega
            real*8 :: phix
            integer :: ichg
            integer :: iwt
            real*8 :: gam
            real*8 :: sn1
            real*8 :: cs1
            real*8 :: pii
            real*8 :: cdn
            real*8 :: qpi
            integer :: mdex
            double precision :: cdfg
            common /cm9/ tomega,phix,ichg,iwt
            common /cm29/ gam,sn1,cs1,pii,cdn,qpi,mdex
        end function cdfg
        function cmtanh(x) ! in :LEVMpyFortran:CMTANH.f
            complex*16 :: x
            complex*16 :: cmtanh
        end function cmtanh
    end interface 
    subroutine csub(m,freq,p,f) ! in :LEVMpyFortran
        integer :: m
        double precision dimension(4002) :: freq
        double precision dimension(50) :: p
        double precision dimension(4002) :: f
        integer :: icnt
        common /cm47/ icnt
    end subroutine csub
    subroutine cubint(x,f,n,ia,ib,result,error,zt,ind) ! in :LEVMpyFortran
        real*8 dimension(n) :: x
        complex*16 dimension(n),depend(n) :: f
        integer, optional,check(len(x)>=n),depend(x) :: n=len(x)
        integer :: ia
        integer :: ib
        complex*16 :: result
        complex*16 :: error
        complex*16 :: zt
        integer :: ind
    end subroutine cubint
    function daefn(x) ! in :LEVMpyFortran
        real*8 :: x
        real*8 :: tomega
        real*8 :: phicom
        integer :: iv
        double precision :: daefn
        common /cm5/ tomega,phicom,iv
    end function daefn
    function daefn2(x) ! in :LEVMpyFortran
        real*8 :: x
        real*8 :: tomega
        real*8 :: phicom
        integer :: iv
        double precision :: daefn2
        common /cm5/ tomega,phicom,iv
    end function daefn2
    subroutine disshill(r1,ta,am,agn,dhrl,dhim,omega) ! in :LEVMpyFortran
        real*8 :: r1
        real*8 :: ta
        real*8 :: am
        real*8 :: agn
        real*8 :: dhrl
        real*8 :: dhim
        real*8 :: omega
    end subroutine disshill
    function distel(r,t,u,phi,nelem,omega) ! in :LEVMpyFortran
        real*8 :: r
        real*8 :: t
        real*8 :: u
        real*8 :: phi
        integer :: nelem
        real*8 :: omega
        real*8 :: rz
        real*8 :: tx
        real*8 :: uu
        real*8 :: phix
        real*8 :: xxm1
        real*8 :: xx1
        real*8 :: xx2
        real*8 :: xx3
        real*8 :: rn
        real*8 :: ain
        integer :: icav
        integer :: nelemn
        integer :: nch
        real*8 :: celcap
        real*8 :: atemp
        real*8 :: wf
        integer :: maxfev
        integer :: icf
        integer :: mde
        integer :: jcdx
        real*8 :: tcmega
        real*8 :: xigdae
        integer :: ichg
        integer :: iwt
        real*8 :: p8
        real*8 :: p18
        real*8 :: tomega
        real*8 :: phicom
        integer :: iv
        real*8 :: px1
        real*8 :: px41
        real*8 :: px45
        complex*16 :: distel
        common /cm13/ rz,tx,uu,phix,xxm1,xx1,xx2,xx3,rn,ain,icav,nelemn,nch
        common /cm12/ celcap,atemp,wf,maxfev,icf,mde,jcdx
        common /cm9/ tcmega,xigdae,ichg,iwt
        common /cm39/ p8,p18
        common /cm5/ tomega,phicom,iv
        common /cm55/ px1,px41,px45
    end function distel
    function dpmpar(i) ! in :LEVMpyFortran
        integer :: i
        double precision :: dpmpar
    end function dpmpar
    subroutine dsub(m,freq,p,f) ! in :LEVMpyFortran
        integer :: m
        double precision dimension(4002) :: freq
        double precision dimension(50) :: p
        double precision dimension(4002) :: f
        real*8 :: tomega
        real*8 :: phicom
        integer :: iv
        integer :: icnt
        real*8 :: tomegg
        real*8 :: xigdae
        real*8 :: chgdae
        common /cm5/ tomega,phicom,iv
        common /cm47/ icnt
        common /cm9/ tomegg,xigdae,chgdae
    end subroutine dsub
    subroutine dxsps(xa,ycc,arr,wf,nn,ip38a) ! in :LEVMpyFortran
        double precision dimension(*) :: xa
        complex*16 dimension(*) :: ycc
        complex*16 :: arr
        double precision :: wf
        integer :: nn
        integer :: ip38a
        integer :: icnt
        real*8 :: p39
        common /cm47/ icnt
        common /cm73/ p39
    end subroutine dxsps
    function enorm(n,x) ! in :LEVMpyFortran
        integer, optional,check(len(x)>=n),depend(x) :: n=len(x)
        double precision dimension(n) :: x
        double precision :: enorm
    end function enorm
    subroutine epsalg(nmax,ss,sf) ! in :LEVMpyFortran
        integer :: nmax
        real*8 dimension(113) :: ss
        real*8 :: sf
    end subroutine epsalg
    subroutine esub(m,freq,p,f) ! in :LEVMpyFortran
        integer :: m
        double precision dimension(4002) :: freq
        double precision dimension(50) :: p
        double precision dimension(4002) :: f
        integer :: icnt
        common /cm47/ icnt
    end subroutine esub
    subroutine fcn(m,nfrei,x,fvec,fjac,ldfjac,iflag) ! in :LEVMpyFortran
        integer, optional,check(len(fvec)>=m),depend(fvec) :: m=len(fvec)
        integer, optional,check(shape(fjac,1)==nfrei),depend(fjac) :: nfrei=shape(fjac,1)
        real*8 dimension(*) :: x
        real*8 dimension(m) :: fvec
        real*8 dimension(ldfjac,nfrei) :: fjac
        integer, optional,check(shape(fjac,0)==ldfjac),depend(fjac) :: ldfjac=shape(fjac,0)
        integer :: iflag
        integer :: mqy
        integer :: ispr
        integer :: icx
        integer :: ndf
        real*8 :: fqq
        integer :: iop
        integer :: iorig
        integer :: nyc
        integer :: j
        integer :: iprint
        integer :: ldfjyc
        integer :: mode
        integer :: ifp
        integer :: ire
        integer :: istp
        integer :: jfp
        integer :: nph
        integer :: ine
        real*8 dimension(4002,50) :: fjacc
        integer :: jit
        integer :: ipf
        integer :: nprin
        integer :: md
        integer :: iwt
        integer :: ixw
        integer :: infp
        integer :: ipl
        integer :: icount
        real*8 dimension(4002) :: y
        real*8 dimension(4002) :: r
        real*8 dimension(4002) :: fj
        real*8 dimension(50) :: p
        real*8 :: drss
        real*8 :: roe
        real*8 :: rke
        integer dimension(50) :: ns
        integer dimension(50) :: nfree
        integer :: n
        integer :: icnt
        integer :: mn
        integer :: irch
        integer :: ixi
        character*1 :: dattyp
        common /cm11/ mqy,ispr,icx,ndf,fqq
        common /cm16/ iop,iorig,nyc,j,iprint,ldfjyc,mode,ifp,ire,istp,jfp,nph,ine
        common /cm14/ fjacc
        common /cm35/ jit,ipf,nprin
        common /cm34/ md,iwt,ixw,infp,ipl
        common /cm47/ icount
        common /cm2/ y,r,fj,p,drss,roe,rke,ns,nfree,n,icnt,mn,irch,ixi,dattyp
    end subroutine fcn
    subroutine fcn1(mpn,nfrei,x,fvec,fjac,ldfjac,iflag) ! in :LEVMpyFortran
        integer, optional,check(len(fvec)>=mpn),depend(fvec) :: mpn=len(fvec)
        integer, optional,check(shape(fjac,1)==nfrei),depend(fjac) :: nfrei=shape(fjac,1)
        real*8 dimension(*) :: x
        real*8 dimension(mpn) :: fvec
        real*8 dimension(mpn,nfrei),depend(mpn) :: fjac
        integer :: ldfjac
        integer :: iflag
        real*8 :: celcap
        character*1 :: fun
        character*1 :: dfit
        character*1 :: pfit
        real*8 dimension(4002) :: y
        real*8 dimension(4002) :: r
        real*8 dimension(4002) :: fj
        real*8 dimension(50) :: p
        real*8 :: drss
        real*8 :: roe
        real*8 :: rke
        integer dimension(50) :: ns
        integer dimension(50) :: nfree
        integer :: n
        integer :: icnt
        integer :: mn
        integer :: irch
        integer :: ixi
        character*1 :: dattyp
        integer :: iop
        integer :: iorig
        integer :: nyc
        integer :: j
        integer :: iprint
        integer :: ldfjyc
        integer :: mode
        integer :: ifp
        integer :: ire
        integer :: istp
        integer :: jfp
        integer :: nph
        integer :: ine
        common /cm3/ celcap,fun,dfit,pfit
        common /cm2/ y,r,fj,p,drss,roe,rke,ns,nfree,n,icnt,mn,irch,ixi,dattyp
        common /cm16/ iop,iorig,nyc,j,iprint,ldfjyc,mode,ifp,ire,istp,jfp,nph,ine
    end subroutine fcn1
    subroutine fitcalc(k,ftol,gtol,xtol,x,maxfev,nprint,nfev,pex,nfrei,sdwr,sdwi,iocnt,sgmaf,fv1,jit,sgmsqm) ! in :LEVMpyFortran
        integer :: k
        real*8 :: ftol
        real*8 :: gtol
        real*8 :: xtol
        real*8 dimension(nfrei) :: x
        integer :: maxfev
        integer :: nprint
        integer :: nfev
        real*8 dimension(50) :: pex
        integer, optional,check(len(x)>=nfrei),depend(x) :: nfrei=len(x)
        real*8 :: sdwr
        real*8 :: sdwi
        integer :: iocnt
        real*8 :: sgmaf
        real*8 dimension(4002) :: fv1
        integer :: jit
        real*8 :: sgmsqm
        integer :: mqy
        integer :: ispr
        integer :: icx
        integer :: ndf
        real*8 :: fqq
        integer :: iop
        integer :: iorig
        integer :: nyc
        integer :: j
        integer :: iprint
        integer :: ldfjac
        integer :: mode
        integer :: ifp
        integer :: ire
        integer :: istp
        integer :: jfp
        integer :: nph
        integer :: ine
        real*8 :: sdwc
        real*8 :: sdrc
        real*8 dimension(50) :: diag
        integer :: ipar
        integer :: iopr
        integer :: mda
        integer :: iwt
        integer :: ixw
        integer :: infp
        integer :: ipl
        integer :: icount
        real*8 :: celcap
        character*1 :: fun
        character*1 :: dfit
        character*1 :: pfit
        real*8 dimension(4002) :: y
        real*8 dimension(4002) :: r
        real*8 dimension(4002) :: fj
        real*8 dimension(50) :: p
        real*8 :: drss
        real*8 :: roe
        real*8 :: rke
        integer dimension(50) :: ns
        integer dimension(50) :: nfree
        integer :: n
        integer :: icnt
        integer :: mn
        integer :: irch
        integer :: ixi
        character*1 :: dattyq
        real*8 dimension(2001) :: freq
        integer :: m
        character*1 :: dattyp
        common /cm11/ mqy,ispr,icx,ndf,fqq
        common /cm16/ iop,iorig,nyc,j,iprint,ldfjac,mode,ifp,ire,istp,jfp,nph,ine
        common /cm18/ sdwc,sdrc,diag,ipar,iopr
        common /cm34/ mda,iwt,ixw,infp,ipl
        common /cm47/ icount
        common /cm3/ celcap,fun,dfit,pfit
        common /cm2/ y,r,fj,p,drss,roe,rke,ns,nfree,n,icnt,mn,irch,ixi,dattyq
        common /cm1/ freq,m,dattyp
    end subroutine fitcalc
    subroutine fsub(m,freq,p,f) ! in :LEVMpyFortran
        integer :: m
        double precision dimension(4002) :: freq
        double precision dimension(50) :: p
        double precision dimension(4002) :: f
        integer :: icnt
        common /cm47/ icnt
    end subroutine fsub
    subroutine gamma(zz,g1,hh) ! in :LEVMpyFortran
        real*8 :: zz
        real*8 :: g1
        real*8 :: hh
    end subroutine gamma
    function gammln(xx) ! in :LEVMpyFortran
        real*8 :: xx
        real*8 :: gammln
    end function gammln
    function gammq(a,x) ! in :LEVMpyFortran
        double precision :: a
        double precision :: x
        double precision :: gammq
    end function gammq
    subroutine gbnm(xc,fw,rinn,nph,zm) ! in :LEVMpyFortran
        real*8 :: xc
        real*8 :: fw
        real*8 :: rinn
        integer :: nph
        complex*16 :: zm
    end subroutine gbnm
    subroutine gcf(gammcf,a,x,gln) ! in :LEVMpyFortran
        real*8 :: gammcf
        real*8 :: a
        real*8 :: x
        real*8 :: gln
    end subroutine gcf
    function gdaefn(x) ! in :LEVMpyFortran
        real*8 :: x
        real*8 :: celcap
        real*8 :: atemp
        real*8 :: wf
        integer :: maxfev
        integer :: icf
        integer :: mde
        integer :: jcdx
        real*8 :: tomega
        real*8 :: xigdae
        integer :: ichg
        integer :: iwt
        double precision :: gdaefn
        common /cm12/ celcap,atemp,wf,maxfev,icf,mde,jcdx
        common /cm9/ tomega,xigdae,ichg,iwt
    end function gdaefn
    function gdaefn1(x) ! in :LEVMpyFortran
        double precision :: x
        real*8 :: tomega
        real*8 :: phix
        integer :: ichg
        integer :: iwt
        real*8 :: gam
        real*8 :: sn1
        real*8 :: cs1
        real*8 :: pii
        real*8 :: cdn
        real*8 :: qpi
        integer :: mdex
        double precision :: gdaefn1
        common /cm9/ tomega,phix,ichg,iwt
        common /cm29/ gam,sn1,cs1,pii,cdn,qpi,mdex
    end function gdaefn1
    function gdaefn2(x) ! in :LEVMpyFortran
        real*8 :: x
        real*8 :: celcap
        real*8 :: atemp
        real*8 :: wf
        integer :: maxfev
        integer :: icf
        integer :: mde
        integer :: jcdx
        real*8 dimension(4002) :: y
        real*8 dimension(4002) :: r
        real*8 dimension(4002) :: fj
        real*8 dimension(50) :: p
        real*8 :: drss
        real*8 :: roe
        real*8 :: rke
        integer dimension(50) :: ns
        integer dimension(50) :: nfree
        integer :: np
        integer :: icnt
        integer :: mn
        integer :: irch
        integer :: ixi
        character*1 :: dattyq
        real*8 :: tomega
        real*8 :: xigdae
        integer :: ichg
        integer :: iwt
        double precision :: gdaefn2
        common /cm12/ celcap,atemp,wf,maxfev,icf,mde,jcdx
        common /cm2/ y,r,fj,p,drss,roe,rke,ns,nfree,np,icnt,mn,irch,ixi,dattyq
        common /cm9/ tomega,xigdae,ichg,iwt
    end function gdaefn2
    function gdaetn(x) ! in :LEVMpyFortran
        real*8 :: x
        real*8 :: tt
        real*8 :: psi
        real*8 :: gam
        real*8 :: deli
        double precision :: gdaetn
        common /cm80/ tt,psi,gam,deli
    end function gdaetn
    function gdrt(yy) ! in :LEVMpyFortran
        real*8 :: yy
        real*8 :: celcap
        real*8 :: atemp
        real*8 :: wf
        integer :: maxfev
        integer :: icf
        integer :: mde
        integer :: jcdx
        real*8 :: tomega
        real*8 :: phicom
        integer :: iv
        real*8 :: tcmega
        real*8 :: xigdae
        integer :: ichg
        integer :: iwt
        double precision :: gdrt
        common /cm12/ celcap,atemp,wf,maxfev,icf,mde,jcdx
        common /cm5/ tomega,phicom,iv
        common /cm9/ tcmega,xigdae,ichg,iwt
    end function gdrt
    subroutine gedae(ii,m,freq,qx,f,jcd,nch,inh) ! in :LEVMpyFortran
        integer :: ii
        integer :: m
        real*8 dimension(*) :: freq
        real*8 dimension(8) :: qx
        real*8 dimension(*) :: f
        integer :: jcd
        integer :: nch
        integer :: inh
        real*8 :: rx
        real*8 :: tx
        real*8 :: ux
        real*8 :: phiz
        real*8 :: xxm1
        real*8 :: xx1
        real*8 :: xx2
        real*8 :: xx3
        real*8 :: rnx
        real*8 :: ain
        integer :: icav
        integer :: nelem
        integer :: ncha
        real*8 :: celcap
        real*8 :: atemp
        real*8 :: wf
        integer :: maxfev
        integer :: icf
        integer :: mde
        integer :: jcdx
        real*8 :: px1
        real*8 :: px41
        real*8 :: px45
        real*8 :: tomega
        real*8 :: phix
        integer :: ichg
        integer :: iwt
        real*8 :: gamx
        real*8 :: sn1
        real*8 :: cs1
        real*8, optional :: pii=0.3183098861838d0
        real*8 :: cdn
        real*8 :: qpi
        integer :: mdex
        common /cm13/ rx,tx,ux,phiz,xxm1,xx1,xx2,xx3,rnx,ain,icav,nelem,ncha
        common /cm12/ celcap,atemp,wf,maxfev,icf,mde,jcdx
        common /cm55/ px1,px41,px45
        common /cm9/ tomega,phix,ichg,iwt
        common /cm29/ gamx,sn1,cs1,pii,cdn,qpi,mdex
    end subroutine gedae
    subroutine ginco(a,x,fincgm,sincgm) ! in :LEVMpyFortran
        real*8 :: a
        real*8 :: x
        real*8 :: fincgm
        real*8 :: sincgm
    end subroutine ginco
    subroutine gser(gamser,a,x,gln) ! in :LEVMpyFortran
        real*8 :: gamser
        real*8 :: a
        real*8 :: x
        real*8 :: gln
    end subroutine gser
    subroutine gsub(m,freq,p,f) ! in :LEVMpyFortran
        integer :: m
        double precision dimension(4002) :: freq
        double precision dimension(50) :: p
        double precision dimension(4002) :: f
        real*8 :: omegat
        real*8 :: psi
        real*8 :: gam
        real*8 :: deli
        character*1 :: dattyp
        common /cm80/ omegat,psi,gam,deli
        common /cm78/ dattyp
    end subroutine gsub
    function hnfg(yy) ! in :LEVMpyFortran
        real*8 :: yy
        real*8 :: tomega
        real*8 :: phix
        integer :: ichg
        integer :: iwt
        real*8 :: gam
        real*8 :: sn1
        real*8 :: cs1
        real*8 :: pii
        real*8 :: cdn
        real*8 :: qpi
        integer :: mdex
        double precision :: hnfg
        common /cm9/ tomega,phix,ichg,iwt
        common /cm29/ gam,sn1,cs1,pii,cdn,qpi,mdex
    end function hnfg
    subroutine hsub(m,freq,p,f) ! in :LEVMpyFortran
        integer :: m
        double precision dimension(4002) :: freq
        double precision dimension(50) :: p
        double precision dimension(4002) :: f
        real*8 :: clcap
        real*8 :: atemp
        real*8 :: wf
        integer :: maxfev
        integer :: icf
        integer :: mde
        integer :: jcdx
        integer :: icnt
        common /cm12/ clcap,atemp,wf,maxfev,icf,mde,jcdx
        common /cm47/ icnt
    end subroutine hsub
    subroutine hyper(xw,ll,s4,s5,aa,bb,cc,dd,d6,ic) ! in :LEVMpyFortran
        real*8 :: xw
        integer :: ll
        real*8 :: s4
        real*8 :: s5
        real*8 :: aa
        real*8 :: bb
        real*8 :: cc
        real*8 :: dd
        real*8 :: d6
        integer :: ic
    end subroutine hyper
    subroutine isub(m,freq,p,f) ! in :LEVMpyFortran
        integer :: m
        double precision dimension(4002) :: freq
        double precision dimension(50) :: p
        double precision dimension(4002) :: f
    end subroutine isub
    subroutine jsub(m,freq,p,f) ! in :LEVMpyFortran
        integer :: m
        double precision dimension(4002) :: freq
        double precision dimension(50) :: p
        double precision dimension(4002) :: f
        integer :: icnt
        common /cm47/ icnt
    end subroutine jsub
    subroutine ksub(m,freq,p,f,nfree) ! in :LEVMpyFortran
        integer :: m
        double precision dimension(4002) :: freq
        double precision dimension(50) :: p
        double precision dimension(4002) :: f
        integer dimension(50) :: nfree
        real*8 :: celcap
        real*8 :: atemp
        real*8 :: wf
        integer :: maxfev
        integer :: icf
        integer :: mde
        integer :: jcdx
        integer :: icnt
        real*8 :: p39
        common /cm12/ celcap,atemp,wf,maxfev,icf,mde,jcdx
        common /cm47/ icnt
        common /cm73/ p39
    end subroutine ksub
    subroutine kwwdp5(tomega,uu,sum) ! in :LEVMpyFortran
        real*8 :: tomega
        real*8 :: uu
        real*8 :: sum
    end subroutine kwwdp5
    subroutine kwwdrt(tau,phi,sum,atemp) ! in :LEVMpyFortran
        real*8 :: tau
        real*8 :: phi
        real*8 :: sum
        real*8 :: atemp
    end subroutine kwwdrt
    subroutine lmder(func,m,n,x,fvec,fjac,ldfjac,ftol,xtol,gtol,maxfev,diag,mode,factor,nprint,info,nfev,njev,ipvt,qtf,wa1,wa2,wa3,wa4) ! in :LEVMpyFortran
        use lmder__user__routines
        external func
        integer, optional,check(len(wa4)>=m),depend(wa4) :: m=len(wa4)
        integer, optional,check(shape(fjac,1)==n),depend(fjac) :: n=shape(fjac,1)
        double precision dimension(*) :: x
        double precision dimension(*) :: fvec
        double precision dimension(ldfjac,n) :: fjac
        integer, optional,check(shape(fjac,0)==ldfjac),depend(fjac) :: ldfjac=shape(fjac,0)
        double precision :: ftol
        double precision :: xtol
        double precision :: gtol
        integer :: maxfev
        double precision dimension(*) :: diag
        integer :: mode
        double precision :: factor
        integer :: nprint
        integer :: info
        integer :: nfev
        integer :: njev
        integer dimension(n),depend(n) :: ipvt
        double precision dimension(*) :: qtf
        double precision dimension(*) :: wa1
        double precision dimension(*) :: wa2
        double precision dimension(*) :: wa3
        double precision dimension(m) :: wa4
        double precision :: fnorm
        common /cm4/ fnorm
    end subroutine lmder
    subroutine lmpar(n,r,ldr,ipvt,diag,qtb,delta,par,x,sigma,wa1,wa2) ! in :LEVMpyFortran
        integer, optional,check(shape(r,1)==n),depend(r) :: n=shape(r,1)
        double precision dimension(ldr,n) :: r
        integer, optional,check(shape(r,0)==ldr),depend(r) :: ldr=shape(r,0)
        integer dimension(n),depend(n) :: ipvt
        double precision dimension(n),depend(n) :: diag
        double precision dimension(n),depend(n) :: qtb
        double precision :: delta
        double precision :: par
        double precision dimension(n),depend(n) :: x
        double precision dimension(n),depend(n) :: sigma
        double precision dimension(n),depend(n) :: wa1
        double precision dimension(n),depend(n) :: wa2
    end subroutine lmpar
    subroutine logac(al,acl) ! in :LEVMpyFortran
        real*8 :: al
        real*8 :: acl
    end subroutine logac
    subroutine lubksb(a,n,np,indx,b) ! in :LEVMpyFortran
        real*8 dimension(np,np) :: a
        integer :: n
        integer, optional,check(shape(a,0)==np),depend(a) :: np=shape(a,0)
        integer dimension(*) :: indx
        real*8 dimension(np),depend(np) :: b
    end subroutine lubksb
    subroutine ludcmp(a,n,np,indx,d,isd) ! in :LEVMpyFortran
        real*8 dimension(np,np) :: a
        integer :: n
        integer, optional,check(shape(a,0)==np),depend(a) :: np=shape(a,0)
        integer dimension(*) :: indx
        real*8 :: d
        integer :: isd
    end subroutine ludcmp
    subroutine mainclc(k,ftol,gtol,xtol,x,maxfev,nprint,nfev,pex,nfrei,fv1) ! in :LEVMpyFortran
        integer :: k
        real*8 :: ftol
        real*8 :: gtol
        real*8 :: xtol
        real*8 dimension(nfrei) :: x
        integer :: maxfev
        integer :: nprint
        integer :: nfev
        real*8 dimension(50) :: pex
        integer, optional,check(len(x)>=nfrei),depend(x) :: nfrei=len(x)
        real*8 dimension(4002) :: fv1
        integer :: mqy
        integer :: ispr
        integer :: icx
        integer :: ndf
        real*8 :: fqq
        integer :: iop
        integer :: iorig
        integer :: nyc
        integer :: j
        integer :: iprint
        integer :: ldfjac
        integer :: mode
        integer :: ifp
        integer :: ire
        integer :: istp
        integer :: jfp
        integer :: nph
        integer :: ine
        integer :: md
        integer :: iwt
        integer :: ixw
        integer :: infp
        integer :: ipl
        real*8 :: celcap
        character*1 :: fun
        character*1 :: dfit
        character*1 :: pfit
        real*8 dimension(4002) :: y
        real*8 dimension(4002) :: r
        real*8 dimension(4002) :: fj
        real*8 dimension(50) :: p
        real*8 :: drss
        real*8 :: roe
        real*8 :: rke
        integer dimension(50) :: ns
        integer dimension(50) :: nfree
        integer :: np
        integer :: icnt
        integer :: mn
        integer :: irch
        integer :: ixi
        character*1 :: dattyq
        real*8 dimension(2001) :: freq
        integer :: m
        character*1 :: dattyp
        common /cm11/ mqy,ispr,icx,ndf,fqq
        common /cm16/ iop,iorig,nyc,j,iprint,ldfjac,mode,ifp,ire,istp,jfp,nph,ine
        common /cm34/ md,iwt,ixw,infp,ipl
        common /cm3/ celcap,fun,dfit,pfit
        common /cm2/ y,r,fj,p,drss,roe,rke,ns,nfree,np,icnt,mn,irch,ixi,dattyq
        common /cm1/ freq,m,dattyp
    end subroutine mainclc
    subroutine midpnt(func,a,b,s,n) ! in :LEVMpyFortran
        use midpnt__user__routines
        external func
        real*8 :: a
        real*8 :: b
        real*8 :: s
        integer :: n
    end subroutine midpnt
    subroutine model(n,px,fq) ! in :LEVMpyFortran
        integer :: n
        real*8 dimension(50) :: px
        real*8 dimension(4002) :: fq
        real*8 :: epsg
        integer :: izr
        real*8 :: fnorm
        real*8 :: celcap
        character*1 :: fun
        character*1 :: dfit
        character*1 :: pfit
        real*8 dimension(4002) :: yv
        real*8 dimension(4002) :: r
        real*8 dimension(4002) :: fj
        real*8 dimension(50) :: pr
        real*8 :: drss
        real*8 :: roe
        real*8 :: rke
        integer dimension(50) :: ns
        integer dimension(50) :: nfree
        integer :: ndum
        integer :: icnt
        integer :: mn
        integer :: irch
        integer :: ixi
        character*1 :: dattyq
        real*8 dimension(2001) :: freq
        integer :: mw
        character*1 :: dattyp
        common /cm10/ epsg,izr
        common /cm4/ fnorm
        common /cm3/ celcap,fun,dfit,pfit
        common /cm2/ yv,r,fj,pr,drss,roe,rke,ns,nfree,ndum,icnt,mn,irch,ixi,dattyq
        common /cm1/ freq,mw,dattyp
    end subroutine model
    subroutine osub(m,freq,p,f) ! in :LEVMpyFortran
        integer :: m
        double precision dimension(4002) :: freq
        double precision dimension(50) :: p
        double precision dimension(4002) :: f
        real*8 :: rx
        real*8 :: tx
        real*8 :: ux
        real*8 :: phiz
        real*8 :: xxm1
        real*8 :: xx1
        real*8 :: xx2
        real*8 :: xx3
        real*8 :: rn
        real*8 :: ain
        integer :: icav
        integer :: nelem
        integer :: nch
        real*8 :: celcap
        real*8 :: atemp
        real*8 :: wf
        integer :: maxfev
        integer :: icf
        integer :: mde
        integer :: jcdx
        real*8 :: px1
        real*8 :: px41
        real*8 :: px45
        integer :: icnt
        real*8 dimension(4002) :: ytt
        common /cm13/ rx,tx,ux,phiz,xxm1,xx1,xx2,xx3,rn,ain,icav,nelem,nch
        common /cm12/ celcap,atemp,wf,maxfev,icf,mde,jcdx
        common /cm55/ px1,px41,px45
        common /cm47/ icnt
        common /cm79/ ytt
    end subroutine osub
    subroutine polint(xa,ya,n,x,y,dy) ! in :LEVMpyFortran
        real*8 dimension(n) :: xa
        real*8 dimension(n),depend(n) :: ya
        integer, optional,check(len(xa)>=n),depend(xa) :: n=len(xa)
        real*8 :: x
        real*8 :: y
        real*8 :: dy
    end subroutine polint
    subroutine qrfac(m,n,a,lda,pivot,ipvt,lipvt,sigma,acnorm,wa) ! in :LEVMpyFortran
        integer :: m
        integer, optional,check(shape(a,1)==n),depend(a) :: n=shape(a,1)
        double precision dimension(lda,n) :: a
        integer, optional,check(shape(a,0)==lda),depend(a) :: lda=shape(a,0)
        logical :: pivot
        integer dimension(lipvt) :: ipvt
        integer, optional,check(len(ipvt)>=lipvt),depend(ipvt) :: lipvt=len(ipvt)
        double precision dimension(n),depend(n) :: sigma
        double precision dimension(n),depend(n) :: acnorm
        double precision dimension(n),depend(n) :: wa
    end subroutine qrfac
    subroutine qromb(func,a,b,vint) ! in :LEVMpyFortran
        external func
        real*8 :: a
        real*8 :: b
        real*8 :: vint
        real*8 :: epsg
        integer :: izr
        common /cm10/ epsg,izr
    end subroutine qromb
    subroutine qromo(func,a,b,ss) ! in :LEVMpyFortran
        external func
        real*8 :: a
        real*8 :: b
        real*8 :: ss
        real*8 :: epsg
        integer :: izr
        common /cm10/ epsg,izr
    end subroutine qromo
    subroutine qrsolv(n,r,ldr,ipvt,diag,qtb,x,sigma,wa) ! in :LEVMpyFortran
        integer, optional,check(shape(r,1)==n),depend(r) :: n=shape(r,1)
        double precision dimension(ldr,n) :: r
        integer, optional,check(shape(r,0)==ldr),depend(r) :: ldr=shape(r,0)
        integer dimension(n),depend(n) :: ipvt
        double precision dimension(n),depend(n) :: diag
        double precision dimension(n),depend(n) :: qtb
        double precision dimension(n),depend(n) :: x
        double precision dimension(n),depend(n) :: sigma
        double precision dimension(n),depend(n) :: wa
    end subroutine qrsolv
    subroutine regmax(mp,ior,ing,iflag,nfrei,mpn,mk,xr,fvec,fjac,p33a) ! in :LEVMpyFortran
        integer :: mp
        integer :: ior
        integer :: ing
        integer :: iflag
        integer, optional,check(shape(fjac,1)==nfrei),depend(fjac) :: nfrei=shape(fjac,1)
        integer, optional,check(len(fvec)>=mpn),depend(fvec) :: mpn=len(fvec)
        integer :: mk
        real*8 dimension(*) :: xr
        real*8 dimension(mpn) :: fvec
        real*8 dimension(mpn,nfrei),depend(mpn) :: fjac
        real*8 :: p33a
        real*8 dimension(4002) :: y
        real*8 dimension(4002) :: r
        real*8 dimension(4002) :: fj
        real*8 dimension(50) :: p
        real*8 :: drss
        real*8 :: roe
        real*8 :: rke
        integer dimension(50) :: ns
        integer dimension(50) :: nfree
        integer :: n
        integer :: icnt
        integer :: mn
        integer :: irch
        integer :: ixi
        character*1 :: dattyp
        integer :: iop
        integer :: iorig
        integer :: nyc
        integer :: j
        integer :: iprint
        integer :: ldfjyc
        integer :: mode
        integer :: ifp
        integer :: ire
        integer :: istp
        integer :: jfp
        integer :: nph
        integer :: ine
        common /cm2/ y,r,fj,p,drss,roe,rke,ns,nfree,n,icnt,mn,irch,ixi,dattyp
        common /cm16/ iop,iorig,nyc,j,iprint,ldfjyc,mode,ifp,ire,istp,jfp,nph,ine
    end subroutine regmax
    subroutine rsub(m,freq,p,f,nfree) ! in :LEVMpyFortran
        integer :: m
        double precision dimension(4002) :: freq
        double precision dimension(50) :: p
        double precision dimension(4002) :: f
        integer dimension(50) :: nfree
        real*8 :: celcap
        real*8 :: atemp
        real*8 :: wf
        integer :: maxfev
        integer :: icf
        integer :: mde
        integer :: jcdx
        integer :: icnt
        real*8 :: p39
        common /cm12/ celcap,atemp,wf,maxfev,icf,mde,jcdx
        common /cm47/ icnt
        common /cm73/ p39
    end subroutine rsub
    subroutine rwts(ky,dattyp,yq,ft) ! in :LEVMpyFortran
        integer :: ky
        character*1 :: dattyp
        real*8 dimension(4002) :: yq
        real*8 dimension(4002) :: ft
        real*8 dimension(4002) :: shw
        integer :: isw
        integer :: jit
        integer :: ipf
        integer :: nprin
        real*8 dimension(4002) :: y
        real*8 dimension(4002) :: r
        real*8 dimension(4002) :: fjt
        real*8 dimension(50) :: p
        real*8 :: drss
        real*8 :: roe
        real*8 :: rke
        integer dimension(50) :: ns
        integer dimension(50) :: nfree
        integer :: np
        integer :: icnt
        integer :: mn
        integer :: irch
        integer :: ixi
        character*1 :: dattyq
        integer :: md
        integer :: iwt
        integer :: ixw
        integer :: infp
        integer :: ipl
        common /cm36/ shw,isw
        common /cm35/ jit,ipf,nprin
        common /cm2/ y,r,fjt,p,drss,roe,rke,ns,nfree,np,icnt,mn,irch,ixi,dattyq
        common /cm34/ md,iwt,ixw,infp,ipl
    end subroutine rwts
    subroutine sdea(omega,iomega,ra,ca,rde,tde,ude,pde,nde,zx) ! in :LEVMpyFortran
        real*8 :: omega
        complex*16 :: iomega
        real*8 :: ra
        real*8 :: ca
        real*8 :: rde
        real*8 :: tde
        real*8 :: ude
        real*8 :: pde
        integer :: nde
        complex*16 :: zx
    end subroutine sdea
    subroutine set(s1,s2,s3,s4,s5,d6,dd,ll,aa,bb,cc,ic) ! in :LEVMpyFortran
        real*8 :: s1
        real*8 :: s2
        real*8 :: s3
        real*8 :: s4
        real*8 :: s5
        real*8 :: d6
        real*8 :: dd
        integer :: ll
        real*8 :: aa
        real*8 :: bb
        real*8 :: cc
        integer :: ic
    end subroutine set
    subroutine sort(tau,isp,nn) ! in :LEVMpyFortran
        real*8 dimension(20) :: tau
        integer dimension(20) :: isp
        integer :: nn
    end subroutine sort
    subroutine spfit(k,ftol,gtol,xtol,x,maxfev,nprint,nfev,pex,nfrei,fv1) ! in :LEVMpyFortran
        integer :: k
        real*8 :: ftol
        real*8 :: gtol
        real*8 :: xtol
        real*8 dimension(nfrei) :: x
        integer :: maxfev
        integer :: nprint
        integer :: nfev
        real*8 dimension(50) :: pex
        integer, optional,check(len(x)>=nfrei),depend(x) :: nfrei=len(x)
        real*8 dimension(4002) :: fv1
        integer :: mqy
        integer :: ispr
        integer :: icx
        integer :: ndf
        real*8 :: fqq
        integer :: iop
        integer :: iorig
        integer :: nyc
        integer :: j
        integer :: iprint
        integer :: ldfjac
        integer :: mode
        integer :: ifp
        integer :: ire
        integer :: istp
        integer :: jfp
        integer :: nph
        integer :: ine
        integer :: jit
        integer :: ipf
        integer :: nprin
        integer :: md
        integer :: iwt
        integer :: ixw
        integer :: infp
        integer :: ipl
        real*8 :: celcap
        character*1 :: fun
        character*1 :: dfit
        character*1 :: pfit
        real*8 dimension(4002) :: y
        real*8 dimension(4002) :: r
        real*8 dimension(4002) :: fj
        real*8 dimension(50) :: p
        real*8 :: drss
        real*8 :: roe
        real*8 :: rke
        integer dimension(50) :: ns
        integer dimension(50) :: nfree
        integer :: np
        integer :: icnt
        integer :: mn
        integer :: irch
        integer :: ixi
        character*1 :: dattyq
        real*8 dimension(2001) :: freq
        integer :: m
        character*1 :: dattyp
        common /cm11/ mqy,ispr,icx,ndf,fqq
        common /cm16/ iop,iorig,nyc,j,iprint,ldfjac,mode,ifp,ire,istp,jfp,nph,ine
        common /cm35/ jit,ipf,nprin
        common /cm34/ md,iwt,ixw,infp,ipl
        common /cm3/ celcap,fun,dfit,pfit
        common /cm2/ y,r,fj,p,drss,roe,rke,ns,nfree,np,icnt,mn,irch,ixi,dattyq
        common /cm1/ freq,m,dattyp
    end subroutine spfit
    subroutine ssub(m,freq,p,f) ! in :LEVMpyFortran
        integer :: m
        double precision dimension(4002) :: freq
        double precision dimension(50) :: p
        double precision dimension(4002) :: f
    end subroutine ssub
    subroutine svdm(nd,mp,sgmasq,x,pex,ns,iorig,istp) ! in :LEVMpyFortran
        integer :: nd
        integer :: mp
        real*8 :: sgmasq
        real*8 dimension(*) :: x
        real*8 dimension(*) :: pex
        integer dimension(*) :: ns
        integer :: iorig
        integer :: istp
        integer :: mqy
        integer :: ispr
        integer :: icx
        integer :: ndf
        real*8 :: fqq
        real*8 dimension(50) :: rxsd
        real*8 dimension(4002,50) :: v
        common /cm11/ mqy,ispr,icx,ndf,fqq
        common /cm20/ rxsd
        common /cm14/ v
    end subroutine svdm
    subroutine traga(aa,yy,pp,qq,il,trsy) ! in :LEVMpyFortran
        real*8 dimension(2,2) :: aa
        real*8 :: yy
        real*8 dimension(2) :: pp
        real*8 dimension(2) :: qq
        integer :: il
        real*8 dimension(2) :: trsy
    end subroutine traga
    subroutine trapzd(func,a,b,s,n) ! in :LEVMpyFortran
        use trapzd__user__routines
        external func
        real*8 :: a
        real*8 :: b
        real*8 :: s
        integer :: n
    end subroutine trapzd
    function ww5(x) ! in :LEVMpyFortran
        real*8 :: x
        real*8 :: celcap
        real*8 :: atemp
        real*8 :: wf
        integer :: maxfev
        integer :: icf
        integer :: mde
        integer :: jcdx
        real*8 :: tomega
        real*8 :: phicom
        integer :: iv
        double precision :: ww5
        common /cm12/ celcap,atemp,wf,maxfev,icf,mde,jcdx
        common /cm5/ tomega,phicom,iv
    end function ww5
end python module LEVMpyFortran

! This file was auto-generated with f2py (version:2).
! See http://cens.ioc.ee/projects/f2py2e/
